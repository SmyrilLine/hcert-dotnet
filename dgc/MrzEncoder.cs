using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;

namespace DGC
{
    public static class MrzEncoder
    {
        private static Dictionary<char, string> CHAR_MAPPINGS = new Dictionary<char, string> {
            {'\u00C0', "A" },
            {'\u00C1', "A" },
            {'\u00C2', "A" },
            {'\u00C3', "A" },
            {'\u00C4', "A" },
            {'\u00C5', "A" },
            {'\u00C6',"AE"},
            {'\u00C7',"C"},
            {'\u00C8',"E"},
            {'\u00C9',"E"},
            {'\u00CA',"E"},
            {'\u00CB',"E"},
            {'\u00CC',"I"},
            {'\u00CD',"I"},
            {'\u00CE',"I"},
            {'\u00CF',"I"},
            {'\u00D0',"D"},
            {'\u00D1',"NXX"},
            {'\u00D2',"O"},
            {'\u00D3',"O"},
            {'\u00D4',"O"},
            {'\u00D5',"O"},
            {'\u00D6',"O"},
            {'\u00D8',"OE"},
            {'\u00D9',"U"},
            {'\u00DA',"U"},
            {'\u00DB',"U"},
            {'\u00DC',"U"},
            {'\u00DD',"Y"},
            {'\u00DE',"TH"},
            {'\u00DF',"SS"},
            {'\u0100',"A"},
            {'\u0102',"A"},
            {'\u0104',"A"},
            {'\u0106',"C"},
            {'\u0108',"C"},
            {'\u010A',"C"},
            {'\u010C',"C"},
            {'\u010E',"D"},
            {'\u0110',"D"},
            {'\u0112',"E"},
            {'\u0114',"E"},
            {'\u0116',"E"},
            {'\u0118',"E"},
            {'\u011A',"E"},
            {'\u011C',"G"},
            {'\u011E',"G"},
            {'\u0120',"G"},
            {'\u0122',"G"},
            {'\u0124',"H"},
            {'\u0126',"H"},
            {'\u0128',"I"},
            {'\u012A',"I"},
            {'\u012C',"I"},
            {'\u012E',"I"},
            {'\u0130',"I"},
            {'\u0131',"I"},
            {'\u0132',"IJ"},
            {'\u0134',"J"},
            {'\u0136',"K"},
            {'\u0139',"L"},
            {'\u013B',"L"},
            {'\u013D',"L"},
            {'\u013F',"L"},
            {'\u0141',"L"},
            {'\u0143',"N"},
            {'\u0145',"N"},
            {'\u0147',"N"},
            {'\u014A',"N"},
            {'\u014C',"O"},
            {'\u014E',"O"},
            {'\u0150',"O"},
            {'\u0152',"OE"},
            {'\u0154',"R"},
            {'\u0156',"R"},
            {'\u0158',"R"},
            {'\u015A',"S"},
            {'\u015C',"S"},
            {'\u015E',"S"},
            {'\u0160',"S"},
            {'\u0162',"T"},
            {'\u0164',"T"},
            {'\u0166',"T"},
            {'\u0168',"U"},
            {'\u016A',"U"},
            {'\u016C',"U"},
            {'\u016E',"U"},
            {'\u0170',"U"},
            {'\u0172',"U"},
            {'\u0174',"W"},
            {'\u0176',"Y"},
            {'\u0178',"Y"},
            {'\u0179',"Z"},
            {'\u017B',"Z"},
            {'\u017D',"Z"},
            {'\u0401',"E"},
            {'\u0402',"D"},
            {'\u0404',"IE"},
            {'\u0405',"DZ"},
            {'\u0406',"I"},
            {'\u0407',"I"},
            {'\u0408',"J"},
            {'\u0409',"LJ"},
            {'\u040A',"NJ"},
            {'\u040C',"K"},
            {'\u040E',"U"},
            {'\u040F',"DZ"},
            {'\u0410',"A"},
            {'\u0411',"B"},
            {'\u0412',"V"},
            {'\u0413',"G"},
            {'\u0414',"D"},
            {'\u0415',"E"},
            {'\u0416',"ZH"},
            {'\u0417',"Z"},
            {'\u0418',"I"},
            {'\u0419',"I"},
            {'\u041A',"K"},
            {'\u041B',"L"},
            {'\u041C',"M"},
            {'\u041D',"N"},
            {'\u041E',"O"},
            {'\u041F',"P"},
            {'\u0420',"R"},
            {'\u0421',"S"},
            {'\u0422',"T"},
            {'\u0423',"U"},
            {'\u0424',"F"},
            {'\u0425',"KH"},
            {'\u0426',"TS"},
            {'\u0427',"CH"},
            {'\u0428',"SH"},
            {'\u0429',"SHCH"},
            {'\u042A',"IE"},
            {'\u042B',"Y"},
            {'\u042D',"E"},
            {'\u042E',"IU"},
            {'\u042F',"IA"},
            {'\u046A',"U"},
            {'\u0474',"Y"},
            {'\u0490',"G"},
            {'\u0492',"G"},
            {'\u04BA',"C"},
            {'\u0621',"XE"},
            {'\u0622',"XAA"},
            {'\u0623',"XAE"},
            {'\u0624',"U"},
            {'\u0625',"I"},
            {'\u0626',"XI"},
            {'\u0627',"A"},
            {'\u0628',"B"},
            {'\u0629',"XAH1"},
            {'\u062A',"T"},
            {'\u062B',"XTH"},
            {'\u062C',"J"},
            {'\u062D',"XH"},
            {'\u062E',"XKH"},
            {'\u062F',"D"},
            {'\u0630',"XDH"},
            {'\u0631',"R"},
            {'\u0632',"Z"},
            {'\u0633',"S"},
            {'\u0634',"XSH"},
            {'\u0635',"XSS"},
            {'\u0636',"XDZ"},
            {'\u0637',"XTT"},
            {'\u0638',"XZZ"},
            {'\u0639',"E"},
            {'\u063A',"G"},
            {'\u0641',"F"},
            {'\u0642',"Q"},
            {'\u0643',"K"},
            {'\u0644',"L"},
            {'\u0645',"M"},
            {'\u0646',"N"},
            {'\u0647',"H"},
            {'\u0648',"W"},
            {'\u0649',"XAY"},
            {'\u064A',"Y"},
            {'\u0671',"XXA"},
            {'\u0679',"XXT"},
            {'\u067C',"XRT"},
            {'\u067E',"P"},
            {'\u0681',"XKE"},
            {'\u0685',"XXH"},
            {'\u0686',"XC"},
            {'\u0688',"XXD"},
            {'\u0689',"XDR"},
            {'\u0691',"XXR"},
            {'\u0693',"XRR"},
            {'\u0696',"XRX"},
            {'\u0698',"XJ"},
            {'\u069A',"XXS"},
            {'\u06A9',"XKK"},
            {'\u06AB',"XXK"},
            {'\u06AD',"XNG"},
            {'\u06AF',"XGG"},
            {'\u06BA',"XNN"},
            {'\u06BC',"XXN"},
            {'\u06BE',"XDO"},
            {'\u06C0',"XYH"},
            {'\u06C1',"XXG"},
            {'\u06C2',"XGE"},
            {'\u06C3',"XTG"},
            {'\u06CC',"XYA"},
            {'\u06CD',"XXY"},
            {'\u06D0',"Y"},
            {'\u06D2',"XYB"},
            {'\u06D3',"XBE"},
        };


        public static string Encode(string input)
        {
            var builder = new StringBuilder(input.Length);
            foreach (var c in input.ToUpper().Trim())
            {
                if (CHAR_MAPPINGS.TryGetValue(c, out string mc))
                {
                    builder.Append(mc);
                }
                else if (c == '’' || c == '\'')
                {
                    // Remove
                }
                else if (Char.IsWhiteSpace(c))
                {
                    builder.Append('<');
                }
                else
                {
                    builder.Append(c);
                }
            }


            // Remove all accents and replace all invalid characters with <
            var normalized = builder.ToString()
                .Normalize();

            var onlyAsci = Regex.Replace(normalized, "[^<[A-Z][0-9]]", "<");
            return onlyAsci;
        }
    }
}
